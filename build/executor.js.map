{"version":3,"sources":["../src/executor.js"],"names":["createExecutor","fn","args","cb","result","apply","err","then","catch","value","length"],"mappings":";;;;;AAAA,IAAMA,iBAAiB,SAAjBA,cAAiB,CAACC,EAAD;AAAA,oCAAQC,IAAR;AAAQA,QAAR;AAAA;;AAAA,SAAiB,UAACC,EAAD,EAAQ;AAC9C;AACA,QAAIC,eAAJ;AACA,QAAI;AACF;AACAA,eAASH,GAAGI,KAAH,CAAS,IAAT,YAAmBH,IAAnB,GAAyBC,EAAzB,GAAT;AACD,KAHD,CAGE,OAAOG,GAAP,EAAY;AACZ;AACAH,SAAGG,GAAH,EAAQ,IAAR;AACA;AACD;;AAED;AACA,QAAIF,UAAUA,OAAOG,IAAjB,IAAyBH,OAAOI,KAApC,EAA2C;AACzCJ,aAAOG,IAAP,CAAY,UAACE,KAAD,EAAW;AACrBN,WAAG,IAAH,EAASM,KAAT;AACD,OAFD,EAGCD,KAHD,CAGO,UAACF,GAAD,EAAS;AACdH,WAAGG,GAAH,EAAQ,IAAR;AACD,OALD;AAMA;AACD;;AAED;AACA,QAAIL,GAAGS,MAAH,GAAY,CAAhB,EAAmB;AACjBP,SAAG,IAAH,EAASC,MAAT;AACD;AACF,GA3BsB;AAAA,CAAvB;;kBA6BeJ,c","file":"executor.js","sourcesContent":["const createExecutor = (fn, ...args) => (cb) => {\n  // Execute the function\n  let result;\n  try {\n    // Get the result\n    result = fn.apply(null, [...args, cb]);\n  } catch (err) {\n    // If the error raised an error report it\n    cb(err, null);\n    return;\n  }\n\n  // Check if the function returned a promise\n  if (result && result.then && result.catch) {\n    result.then((value) => {\n      cb(null, value);\n    })\n    .catch((err) => {\n      cb(err, null);\n    });\n    return;\n  }\n\n  // Check if the function didn't have a callback\n  if (fn.length < 4) {\n    cb(null, result);\n  }\n};\n\nexport default createExecutor;\n"]}